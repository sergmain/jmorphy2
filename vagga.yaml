_default:
  gradle-uid: &gradle-uid 900
  gradle_home: &gradle-home /work/.gradle
  command_options: &cmd-opts
    container: java
    user-id: *gradle-uid
    external-user-id: 0
    prerequisites: [_mk-gradle-user-home]
    volumes:
      /work/.gradle/caches: !CacheDir gradle-cache

minimum-vagga: v0.7.1

containers:
  java:
    environ:
      JAVA_HOME: /usr/lib/jvm/java-12-openjdk-amd64
      GRADLE_USER_HOME: *gradle-home
      LANG: en_US.UTF-8
    setup:
    - !Ubuntu disco
    - !UbuntuUniverse
    - !Install
      - ca-certificates-java
      - openjdk-12-jdk-headless
    - !Sh update-ca-certificates
    - !Env
      GRADLE_USER_HOME: *gradle-home
      GRADLE_UID: *gradle-uid
    - !Sh |
        groupadd -g $GRADLE_UID gradle
        useradd -u $GRADLE_UID -g gradle -d $GRADLE_USER_HOME gradle
    - !EnsureDir /opt/gradle
    - !Unzip
      url: https://services.gradle.org/distributions/gradle-5.2.1-bin.zip
      subdir: gradle-5.2.1
      path: /opt/gradle
    - !Sh ln -s /opt/gradle/bin/gradle /usr/local/bin/gradle

  elastic:
    setup:
    - !Ubuntu bionic
    - !UbuntuUniverse
    - !Install [ca-certificates]
    - !UbuntuRepo
      url: https://artifacts.elastic.co/packages/7.x/apt
      trusted: true
      suite: stable
      components: [main]
    - !Env
      ES_SKIP_SET_KERNEL_PARAMETERS: true
    - !Install
      - openjdk-11-jre-headless
    - !Sh apt-get install elasticsearch=$(cat es.version)
    - !EnsureDir /var/lib/elasticsearch
    - !EnsureDir /var/log/elasticsearch
    volumes:
      /var/lib/elasticsearch: !Persistent { name: elastic-data }
      /var/log/elasticsearch: !Persistent { name: elastic-logs }
    auto-clean: true

  pymorphy2:
    environ:
      HOME: /work
      LANG: en_US.UTF-8
    setup:
    - !UbuntuRelease { codename: xenial }
    - !PipConfig { dependencies: true }
    - !Py3Install
      - pymorphy2
      - pymorphy2-dicts-ru
      - pymorphy2-dicts-uk
      - ipython

commands:
  _mk-gradle-user-home: !Command
    container: java
    run: mkdir -p $GRADLE_USER_HOME/caches

  gradle: !Command
    <<: *cmd-opts
    description: Run arbitrary gradle command
    run: [gradle]

  daemon: !Command
    <<: *cmd-opts
    description: Run gradle daemon
    run: |
      # --foreground option runs daemon with different jvm options
      # so then another gradle process rejects to connect to the daemon
      gradle --dry-run --daemon
      GRADLE_PID=$(pidof java)
      echo "Gradle daemon successfully started [PID: $GRADLE_PID]."
      while [ -e /proc/$GRADLE_PID ]; do sleep 1; done

  compile: !Command
    <<: *cmd-opts
    description: Compile all source files
    run: [gradle, compileJava]

  compile-test: !Command
    <<: *cmd-opts
    description: Compile all test source files
    run: [gradle, compileTestJava]

  build: !Command
    <<: *cmd-opts
    description: Compile, run tests and make packages
    run: [gradle, build]

  assemble: !Command
    <<: *cmd-opts
    description: Build and assemple package
    run: [gradle, assemble]

  clean: !Command
    <<: *cmd-opts
    description: Clean all building files
    run: [gradle, clean]

  test: !Command
    <<: *cmd-opts
    description: Run unit tests
    run: [gradle, test]

  check: !Command
    <<: *cmd-opts
    description: Run all checks and tests
    run: [gradle, check]

  update-shas: !Command
    <<: *cmd-opts
    description: Clean up and update sha hashsums for local artifacts
    run: |
      cd /work/jmorphy2-elasticsearch/licenses
      rm -rf dawg-*.sha1 jmorphy2-*.sha1
      cd ..
      gradle updateShas

  benchmark: !Command
    <<: *cmd-opts
    description: Run benchmarks
    run: [gradle, benchmark]

  elastic: !Command
    description: Run elasticsearch
    container: elastic
    user-id: 1
    external-user-id: 0
    volumes:
      /usr/share/elasticsearch/plugins: !Tmpfs
    prerequisites:
    - _maybe-assemble-plugin
    run: |
      set -e
      DISTRIBUTION_DIR=/work/jmorphy2-elasticsearch/build/distributions
      PLUGIN_PATH=$DISTRIBUTION_DIR/analysis-jmorphy2-$(cat project.version)-es$(cat es.version).zip
      /usr/share/elasticsearch/bin/elasticsearch-plugin install file:$PLUGIN_PATH
      /usr/share/elasticsearch/bin/elasticsearch \
        -E path.data=/var/lib/elasticsearch \
        -E path.logs=/var/log/elasticsearch

  _maybe-assemble-plugin: !Command
    <<: *cmd-opts
    run: |
      DISTRIBUTION_DIR=/work/jmorphy2-elasticsearch/build/distributions
      PLUGIN_PATH=$DISTRIBUTION_DIR/analysis-jmorphy2-$(cat project.version)-es$(cat es.version).zip
      if [ ! -f ${PLUGIN_PATH} ]; then
        gradle assemble -p jmorphy2-elasticsearch
      fi

  python: !Command
    description: Run python shell with pymorphy2 package installed
    container: pymorphy2
    run: [ipython]
